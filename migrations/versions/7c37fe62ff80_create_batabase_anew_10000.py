"""create batabase anew 10000

Revision ID: 7c37fe62ff80
Revises: e6d9807e7614
Create Date: 2025-07-22 12:49:03.708818

"""
from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '7c37fe62ff80'
down_revision: Union[str, Sequence[str], None] = 'e6d9807e7614'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('longitude', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('latitude', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('elevation', sa.Integer(), nullable=False),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('longitude', 'latitude', name='uq_lon_lat')
    )
    op.execute("ALTER TABLE locations ADD SPATIAL INDEX idx_geom (geom);")
    op.create_table('projection_attributes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('CORDEX_domain', sa.String(length=50), nullable=False),
    sa.Column('global_climate_model', sa.String(length=50), nullable=False),
    sa.Column('regional_climate_model', sa.String(length=50), nullable=False),
    sa.Column('experiment_id', sa.String(length=50), nullable=False),
    sa.Column('ensemble', sa.String(length=50), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.Column('starting_date', sa.DateTime(), nullable=False),
    sa.Column('ending_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('aws_user_name', sa.String(length=500), nullable=False),
    sa.Column('email', sa.String(length=500), nullable=False),
    sa.Column('account_type', sa.Enum('commercial', 'academic', 'beta', 'alpha', name='accounttype'), nullable=False),
    sa.Column('subscription_expires_in', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('variables',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('projection_id', sa.Integer(), nullable=False),
    sa.Column('standard_name', sa.String(length=50), nullable=False),
    sa.Column('long_name', sa.String(length=200), nullable=False),
    sa.Column('units', sa.String(length=40), nullable=False),
    sa.ForeignKeyConstraint(['projection_id'], ['projection_attributes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('projection_id', 'standard_name', name='uq_standardName_projectionID')
    )
    op.create_table('data_mapping',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('variable_id', sa.Integer(), nullable=False),
    sa.Column('projection_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['projection_id'], ['projection_attributes.id'], ),
    sa.ForeignKeyConstraint(['variable_id'], ['variables.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('data_mapping')
    op.drop_table('variables')
    op.drop_table('users')
    op.drop_table('projection_attributes')
    op.drop_index('idx_locations_geom', table_name='locations', postgresql_using='gist')
    op.drop_index('idx_geom', table_name='locations', mysql_using='SPATIAL')
    op.drop_table('locations')
    # ### end Alembic commands ###
